# river :: RIscV assemblER

RV32IM Instruction Set (https://www.cs.sfu.ca/~ashriram/Courses/CS295/assets/notebooks/RISCV/RISCV_CARD.pdf)

Goal: Matmul with proper functions and .word array
Why?: Matmul go fast! With my assembler

## How

* Lex input into tokens
* 3 pass pre-processing

	(1) Fill symbol table
	(2) Resolve symbol addresses given constant worst case pseudo expansion lengths
	(3) Expand pseudo instructions into token arrays

* Final parse + machine code generation pass

## Features

[x] RV32I Base Integer Instructions
[x] Labels
[x] Register ABI Names
[x] RV32M Extension
[x] Basic Pseudo-Instructions: li, la, mv, nop, neg, call, ret, beqz, bnez, bgez, bltz

## Todo

[] Robust error handling, source line # + good error messages
[] Better immediate parsing (negative hex, binary)
[] Test script + files
[] More Pseduo-instructions 
[] Assembler directives
[] Dissasembler / Emulator??
